ssh-remote-access.txt
Created Wed 27 Nov 2019 10:45:44 AM AKST
Copyright (C) 2019 by Raymond E. Marcil <marcilr@gmail.com>


ssh remote access to linode


Mon 27 Apr 2020 02:24:49 PM AKDT
================================
Linode Manager shows:

IP address: 173.255.210.242
       mac: 2600:3c01:f03c:91ff:febc:652b


ssh remote access to linode is failing:

$ ssh linode
marcilr@72.14.191.202: Permission denied (publickey).
$ 

Need to verify ssh keys and such.

I. Login to Linode Cloud Manager at:
https://cloud.linode.com/

Dashboard displays:
  Rockhounding
  Debian 8, Nanode 1GB: 1 CPU, 25GB Storage, 1GB RAM
  Fremont, CA

Linodes displays:
  Linode:      Rockhounding
               Debian 8, Nanode 1GB: 1 CPU, 25GB Storage, 1GB RAM

  IP Address:  173.255.210.242

  Regions:     Fremont, CA
  Last Backup: Never

II. On linode dashboard:
  click Rockhounding machine
  click Launch Console

III. Rockhounding - Linode Lisg Console window opened
  with login to machine.  Logged in.

IV. Check debian version:

$ cat /etc/debian_version
9.9
$

The version is  behind the lastest 10.3 (as of Mon April 27, 2020)

V. Run update and upgrade:

$ sudo aptitude update

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for marcilr: ***
...
$ sudo aptitude upgrade
Resolving dependencies...                
The following NEW packages will be installed:
  linux-image-4.9.0-12-amd64{a} 
The following packages will be upgraded:
  apache2 apache2-bin apache2-data apache2-utils base-files curl 
  debian-archive-keyring e2fslibs e2fsprogs exim4 exim4-base exim4-config 
  exim4-daemon-light file gettext-base ghostscript git git-all git-arch 
  git-cvs git-daemon-run git-doc git-el git-email git-gui git-man 
  git-mediawiki git-svn gitk gitweb grub-common grub-pc grub-pc-bin 
  grub2-common libcaca0 libcomerr2 libcups2 libcupsimage2 libcurl3 
  libcurl3-gnutls libdatetime-timezone-perl libexif12 libexpat1 
  libfreetype6 libfribidi0 libgd3 libglib2.0-0 libglib2.0-data libgs9 
  libgs9-common libicu57 libidn11 libldap-2.4-2 libldap-common libmagic-mgc 
  libmagic1 libnghttp2-14 libopenjp2-7 libpam-systemd libperl5.24 
  libsasl2-2 libsasl2-modules libsasl2-modules-db libss2 libssl-dev 
  libssl-doc libssl1.0.2 libssl1.1 libsvn-perl libsvn1 libsystemd0 libudev1 
  libvpx4 linux-image-amd64 linux-libc-dev openssh-client openssh-server 
  openssh-sftp-server openssl patch perl perl-base perl-modules-5.24 
  python-apt python-apt-common python3-apt python3-reportbug reportbug sudo 
  systemd systemd-sysv tzdata udev vim vim-common vim-runtime vim-tiny xxd 
98 packages upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 122 MB of archives. After unpacking 194 MB will be used.
Do you want to continue? [Y/n/?] Y
...
$

$ cat /etc/debian_version 
9.12
$

VI. Upgrade distribution from debian strech 9.12 
to buster 10.3.

1. First, create a backup copy of the /etc/apt/sources.list file:
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak-20200427

2. Then, open the file for editing (we are using GNU nano for text editing):
  sudo nano /etc/apt/sources.list

3. Change all the references in this file from Stretch to Buster. The entries should appear as follows:
  deb http://deb.debian.org/debian debian buster main
  deb http://deb.debian.org/debian buster-updates main
  deb http://deb.debian.org/debian buster/updates main

  NOTE: Used sed to update stretch to buster:
    $ cd /etc/apt/
    $ sed -i 's/stretch/buster/g' sources.list

4. Update the local package lists:
  $ sudo aptitude update
  Hit http://deb.debian.org/debian-security buster/updates InRelease
  Hit http://security.debian.org/debian-security buster/updates InRelease     
  Hit http://deb.debian.org/debian buster-updates InRelease
  Ign http://dl.google.com/linux/chrome/deb stable InRelease            
  Get: 1 http://dl.google.com/linux/chrome/deb stable Release [943 B]
  Get: 2 http://dl.google.com/linux/chrome/deb stable Release.gpg [819 B]
  Hit http://ftp.us.debian.org/debian buster InRelease               
  Err http://dl.google.com/linux/chrome/deb stable Release.gpg
    The following signatures couldn't be verified because the public key \
  is not available: NO_PUBKEY 78BD65473CB3BD13
  Fetched 819 B in 0s (1,304 B/s)
  W: An error occurred during the signature verification. The repository \
  is not updated and the previous index files will be used. \
  GPG error: http://dl.google.com/linux/chrome/deb stable Release: \
  The following signatures couldn't be verified because the \
  public key is not available: NO_PUBKEY 78BD65473CB3BD13
  W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/\
  stable/Release.gpg: The following signatures couldn't be verified \
  because the public key is not available: NO_PUBKEY 78BD65473CB3BD13
  W: Some index files failed to download. They have been ignored, \
  or old ones used instead.
                                         
  $ 

  To fix the above error (on Rockhounding linode):
    $ sudo gpg --keyserver subkeys.pgp.net --recv-keys 78BD65473CB3BD13
    gpg: directory '/root/.gnupg' created
    gpg: keybox '/root/.gnupg/pubring.kbx' created
    ...
    This command did not complete.

  --SecureApt 
    All about secure apt
    https://wiki.debian.org/SecureApt

  Hence update with no authentication:
  $ sudo aptitude update
     This command did not work on linode:
  
  $ sudo aptitude update
  ...
  Get: 2 http://dl.google.com/linux/chrome/deb stable Release.gpg [819 B]
  Err http://dl.google.com/linux/chrome/deb stable Release.gpg
    The following signatures couldn't be verified because the \
  public key is not available: NO_PUBKEY 78BD65473CB3BD13
  Fetched 819 B in 0s (1,367 B/s)
  W: An error occurred during the signature verification. \
  The repository is not updated and the previous index files \
  will be used. GPG error: http://dl.google.com/linux/chrome/deb \
  stable Release: The following signatures couldn't be verified \
  because the public key is not available: NO_PUBKEY 78BD65473CB3BD13
  W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/\
  stable/Release.gpg: The following signatures couldn't be verified \
  because the public key is not available: NO_PUBKEY 78BD65473CB3BD13
  W: Some index files failed to download. They have been ignored, \
  or old ones used instead.

  $                                         

  Didn't get keys ignored for update.  


5. Next, run updates on the software packages to prepare
   for the operating system upgrade:
  $ sudo apt-get upgrade
  ...
  Get: 27 http://ftp.us.debian.org/debian buster/non-free Translation-en [88.7 kB]
  Fetched 23.2 MB in 7s (3,298 kB/s)
  W: An error occurred during the signature verification. \
  The repository is not updated and the previous index files \
  will be used. GPG error: http://dl.google.com/linux/chrome/deb \
  stable Release: The following signatures couldn't be verified \
  because the public key is not available: NO_PUBKEY 78BD65473CB3BD13
  W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/\
  stable/Release.gpg: The following signatures couldn't be verified \
  because the public key is not available: NO_PUBKEY 78BD65473CB3BD13
  W: Some index files failed to download. They have been ignored, \
  or old ones used instead.
                                         
  Current status: 705 (+705) upgradable, 57119 (+57000) new.
  $

  To fix above GPG  error:
  $ gpg --keyserver subkeys.pgp.net --recv-keys 55BE302B
  gpg: keybox '/home/marcilr/.gnupg/pubring.kbx' created
  
  gpg: keyserver receive failed: Network is unreachable
  $

  or

  $ gpg --keyserver subkeys.pgp.net --recv-keys 55BE302B
  gpg: keyserver receive failed: Connection timed out
  $ 

  How do I bypass/ignore the gpg signature checks of apt?
  
  Pass the --allow-unauthenticated option to apt-get as in:

  sudo apt-get --allow-unauthenticated upgrade

  From tha manual page of apt-get:

      --allow-unauthenticated

      Ignore if packages can't be authenticated and don't 
      prompt about it. This is useful for tools like pbuilder. 
      Configuration Item: APT::Get::AllowUnauthenticated.

  You can make this setting permanent by using your own config 
  file at /etc/apt/apt.conf.d/ dir.  The filename can be 99myown
  and it may contain this line:

      APT::Get::AllowUnauthenticated "true";

  In this way, you don't need to use the option every time you
  want to install software.  Note: I do not recommend setting
  this option by default, it bypasses signature checks that
  could allow an adversary to compromise your computer.

  --shareimprove this answer
    edited Oct 10 '13 at 7:50
    answered Nov 1 '11 at 12:55
    Lekensteyn
    https://askubuntu.com/questions/74345/how-do-i-bypass-ignore-the-gpg-signature-checks-of-apt

  For upgrade used:
    $ sudo apt-get --allow-unauthenticated upgrade   <=== Used this


--Upgrade to Debian Version 10 Buster
  https://phoenixnap.com/kb/how-to-upgrade-debian-9-stretch-to-debian-10-buster




Wed 27 Nov 2019 10:45:44 AM AKST
================================
I. Login to Linode Cloud Manager at:
https://cloud.linode.com/

II. Find your Linode’s IP AddressPermalink
Your Linode has a unique IP address that identifies it to 
other devices and users on the internet.
  1. Click the Linodes menu item in the Cloud Manager’s left hand navigation.

  2. Find your Linode, click on it’s name and navigate to Networking.
     click Rockhounding
     Debian 8, Nanode 1GB: 1 CPU, 25GB Storage, 1GB RAM

     click Networking tab

  3. Your IPv4 and IPv6 addresses appear under the IPv4 and IPv6 sections.
  IP Addresses:
  
  IPv4:            173.255.210.242
  default gateway: 173.255.210.1

  IPv6: 2600:3c01::f03c:91ff:febc:652b

  Still denied at:
  $ ssh 173.255.210.242
  marcilr@173.255.210.242: Permission denied (publickey).
  $ 

  4. Log in Using SSH
  Once you have the IP address and an SSH client, 
  you can log in via SSH. The following instructions 
  are written for Linux and macOS.  If you’re using
  PuTTY on Windows, follow these instructions.

  https://www.linode.com/docs/getting-started/#connect-to-your-linode-via-ssh


Links
=====
Cloud Manager’s
https://cloud.linode.com/

Connect to Your Linode via SSH         
https://www.linode.com/docs/getting-started/#connect-to-your-linode-via-ssh

Getting Started Guide
Getting Started with Linode
Connect to Your Linode via SSH
Linux: You can use a terminal window, regardless of desktop environment
or window manager.
https://www.linode.com/docs/getting-started/
